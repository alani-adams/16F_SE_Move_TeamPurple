At first glance, Cucumber and Unit testing seem almost synonymous. They both involve aspects of testing the functionality of code and
their implementation, eventually being able to demonstrate their correctness. However, while unit testing is just that, Cucumber exceeds
this by being Acceptance Tests. Unit testing starts with the basics (the units) of an application, testing whether or not a snippet of 
code functions as it's supposed to. With Cucumber, acceptance tests paint a broader picture of the application in general. Acceptance 
tests (in Gherkin) clearly show user stories (as a <Role>, I want <action>, so that <outcome>). Unit testing, at its most basic level,
does not provide for this.
